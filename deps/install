# Copyright (C) 2021 Allan Leal

#------------------------------------------------------------------------------
# Note
#------------------------------------------------------------------------------
# This script can be executed from anywhere because of the use of
# CMAKE_CURRENT_LIST_DIR to detect the path to this install cmake script.
#------------------------------------------------------------------------------

# Define the variable GENERATOR containing the cmake option for the build tool to use.
if(DEFINED GENERATOR)
    set(GENERATOR "-G${GENERATOR}")
endif()

# Set the build type to Release by default, if not defined
if(NOT DEFINED BUILD_TYPE)
    set(BUILD_TYPE Release)
endif()

# Set the build path variable BUILD_PATH
if(NOT DEFINED BUILD_PATH)
    set(BUILD_PATH ${CMAKE_CURRENT_LIST_DIR}/build)  # Set BUILD_PATH to rootdir/build if not defined.
endif()

# Compute the native install path for target OS (Linux, macOS, Windows).
file(TO_NATIVE_PATH ${BUILD_PATH} BUILD_PATH)

message(STATUS "Using ${BUILD_PATH} as the path where the external dependencies are built.")

# Set the install path variable INSTALL_PATH
if(NOT DEFINED INSTALL_PATH)
    set(INSTALL_PATH ${BUILD_PATH}/install)  # Set INSTALL_PATH to rootdir/build/install if not defined
endif()

# Compute the native install path for target OS (Linux, macOS, Windows).
file(TO_NATIVE_PATH ${INSTALL_PATH} INSTALL_PATH)

message(STATUS "Using ${INSTALL_PATH} as the path where the external dependencies are installed.")

# Set the number of parallel jobs to empty for maximum number of jobs, if not defined
if(NOT DEFINED JOBS)
    set(JOBS "")
endif()

# Define the variable PARALLEL containing the cmake option for parallel builds.
if(NOT DEFINED PARALLEL AND NOT WIN32)
    set(PARALLEL --parallel ${JOBS})  # in Windows, using MSVC compilers, --parallel cancels the /MP compilation option and ends up with not parallel build at all!
endif()

# Configure the building and installation of the dependencies
execute_process(COMMAND
    ${CMAKE_COMMAND} ${GENERATOR} -S ${CMAKE_CURRENT_LIST_DIR} -B ${BUILD_PATH}
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
        -DCMAKE_INSTALL_PREFIX=${INSTALL_PATH})

# Build and install the dependencies
execute_process(COMMAND
    ${CMAKE_COMMAND} --build ${BUILD_PATH} --config ${BUILD_TYPE} ${PARALLEL})


